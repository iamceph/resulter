apply plugin: 'maven-publish'
apply plugin: 'signing'

signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)

    sign publishing.publications
}

publishing {
    publications {
        def maven = create(project.name, MavenPublication) {
            group = project.group
            version project.version

            it.artifact(project.tasks.sourcesJar)
            it.artifact(project.tasks.javadocJar)
            it.artifact(project.tasks.jar)

            it.pom.withXml {
                def dependenciesNode = asNode().appendNode("dependencies")
                project.configurations.compileOnly.dependencies.each {
                    if (!(it instanceof SelfResolvingDependency)) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'provided')
                    }
                }
                if (!project.tasks.findByName("shadowJar")) {
                    project.configurations.api.dependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'compile')
                    }
                }
            }

            // Mostly self-explanatory metadata
            pom {
                name = "Resulter"
                description = 'Tired of throwing exceptions or returning nonsense? Well, Resulter will save you!'
                url = 'https://github.com/iamceph/resulter'
                licenses {
                    license {
                        name = 'GPL-3.0 License'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'iamceph'
                        name = 'Frantisek Novosad'
                        email = 'frantisek@nvsd.dev'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/iamceph/resulter.git'
                    developerConnection = 'scm:git:ssh://github.com/iamceph/resulter.git'
                    url = 'https://github.com/iamceph/resulter/tree/main'
                }
            }
        }
    }
}